#include <QtCore>

bool ssleg(double* a, double* x, double* b, int size);
/*
решение системы линейных алгебраических уравнений методом Гаусса 
a - массив коэффициентов перед неизвестными,
b - коэффициенты правых частей,
x - массив, в который помещаются результаты,
size - число уравнений и неизвестных.
функция возвращает true, если решение выполнено успешно, и - false в противном случае. 
*/

bool invgj(double* inv, double* a, int size);
/*
обращение матрицы методом Гаусса-Жордана 
a - указатель на массив элементов матрицы,
inv - указатель на массив, в который должен быть записан результат
size - размер матрцы.
функция возвращает true, если обращение выполнено успешно, и - false в противном случае. 
*/

bool mvprod(double* r, double* m, double* v, int w, int h);
/*
умножение матрицы  m на вектор v.
r - указатель на массив элементов результирующей матрицы,
m - указатель на массив элементов исходной матрицы
v - указатель на массив элементов вектора размером w
w,h - размеры матрцы по горизонтали и вертикали.
функция возвращает true 
*/

bool mmprod(double* r, double* ml, double* mr, int wl, int hl, int wr, int hr);
/*
умножение матрицы  ml(размеры матрицы wl X hl) на матрицу mr (размеры матрицы wr X hr).
r - указатель на массив элементов результирующей матрицы размером wr X hl,
ml - указатель на массив элементов матрицы, стоящей слева,
mr - указатель на массив элементов матрицы, стоящей справа,
функция возвращает true при успешном выполнении операции и false в случае wl!=hr, когда умножение невозможно
*/

void transpose(double* r, double* m, int w, int h);
/*
транспонирование матрицы m (размеры матрицы w X h).
r - указатель на массив элементов результирующей матрицы размером h X w,
m - указатель на массив элементов исходной матрицы,
*/

bool mdiagprod(double* r, double* m, double* d, int w, int h);
/*
умножение матрицы m на диагональную матрицу d.
r - указатель на массив элементов результирующей матрицы,
m - указатель на массив элементов исходной матрицы
d - указатель на одномерный массив диагональных элементов матрицы d,
w,h - размеры матрцы m по горизонтали и вертикали.
функция возвращает true 
*/

//////////////////////////////////////////
void swapcolumns(double *a, int size, int p, int q);// перестановка столбцов p и q местами, size - размер матрицы, заданной указателем на массив а, по горизонтали;
void swaplines(double *a, int size, int p, int q);// перестановка строк p и q местами, size - размер матрицы, заданной указателем на массив а, по горизонтали;
void swapel(double *a, int p, int q);// перестановка элементов одномерного массива  p и q местами;
//////////////////////////////////////////

void slsm(int w, int h, double* z, double* c, double* L, double* W = NULL);
/*
Метод наименьших квадратов. Решаем систему вида L = с*z
Эта функция позволяет быстро вычислить вектор неизвестных (z), чтобы сэкономит время и ресурсы.
Ковариационная матрица, ошибка единицы веса и ошибки неизвестных не вычисляются,
L - указатель на массив элементов, представляющий вектор данных.
W - указатель на массив элементов, представляющий весовую диагональную матрицу. 
Для экономии времени и ресурсов диагональная матрица хранится как одномерный массив диагональных элементов.
По умолчанию этот указатель равен NULL (то есть если веса не нужны)
w,h - размеры матрцы плана (с) m по горизонтали и вертикали. Одновременно w - число неизвестных, h - число условных уравнений
*/